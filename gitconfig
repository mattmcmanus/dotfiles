[user]
	name = Matt McManus
	email = mmcmanus@auditboard.com
	signingkey = 6231AA94A9B1B428

[hub]
  protocol = https

[push]
  default = current

[alias]
  a = add -p
  c = commit
  amend = commit --amend
  shove = commit --amend --no-edit
  ci = commit -v
  cob = checkout -b
  cop = checkout -p
  co = checkout
  clean = !git fsck && git gc --prune=now
  m = !git checkout $(git default) && git pull --rebase --autostash && cd .
  br = branch
  rc = rebase --continue

  track        = update-index --no-assume-unchanged
  untrack      = update-index --assume-unchanged

  list-branches = branch --sort=committerdate
  new-branch = !git checkout $(git default) && git pull --rebase && cd . && git checkout -b $1
  set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout $(git default) && git merge @{-1}

  st = status
  s = status -sb

  undo = reset --soft HEAD^
  unstage = reset HEAD

  fp = push -f
  pu = push
  poh = push origin HEAD
  yolo = push -f --no-verify

  pl = pull

  l = log
  lm = !git log origin/$(git default)..
  ll = log --stat --abbrev-commit
  recap = log --no-merges --author=matt@mcmanus.io
  d = diff
  dft = difftool
  su = "!f() { git submodule sync; git submodule update --init; }; f"
  up = pull --rebase --prune --autostash
  upm = !sh -c 'git fetch && git rebase origin/$(git default) --autostash'
  default = !git remote show origin | grep 'HEAD branch' | cut -d' ' -f5
  tidy-up = !git rebase -i `git rev-parse origin/$(git default)`
  rm-merged = !git branch --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" { print $1 }' | xargs -r git branch -D

[format]
  pretty=format:%C(yellow)%h%Creset - %Cgreen(%ai)%Creset - %s  %C(bold blue)<%ae>%Creset%C(red)%d%Creset 

[diff]
	external = difft
[difftool "difftastic"]
        cmd = difft "$LOCAL" "$REMOTE"
[pager]
        difftool = true
[credential]
  helper = osxkeychain
[rerere]
  enabled = 1
[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui     = auto
  diff   = auto
  status = auto
  branch = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
  excludesfile = ~/.gitignore
  autocrlf     = input
  editor       = vim
	hooksPath = .githooks
[fetch]
  prune = true
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[mergetool "sourcetree"]
  cmd = /opt/homebrew-cask/Caskroom/sourcetree/1.8.1/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[apply]
  whitespace = nowarn
[apply]
  whitespace = nowarn
[mergetool]
  keepBackup = false
[difftool]
  prompt = false
[help]
  autocorrect = 1

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[merge]
	conflictstyle = diff3
[init]
	defaultBranch = main
[commit]
	gpgsign = true
